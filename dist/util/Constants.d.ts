export declare const ArgumentMatches: Readonly<{
    readonly PHRASE: "phrase";
    readonly FLAG: "flag";
    readonly OPTION: "option";
    readonly REST: "rest";
    readonly SEPARATE: "separate";
    readonly TEXT: "text";
    readonly CONTENT: "content";
    readonly REST_CONTENT: "restContent";
    readonly NONE: "none";
}>;
export declare const ArgumentTypes: Readonly<{
    readonly STRING: "string";
    readonly LOWERCASE: "lowercase";
    readonly UPPERCASE: "uppercase";
    readonly CHAR_CODES: "charCodes";
    readonly NUMBER: "number";
    readonly INTEGER: "integer";
    readonly BIGINT: "bigint";
    readonly EMOJINT: "emojint";
    readonly URL: "url";
    readonly DATE: "date";
    readonly COLOR: "color";
    readonly USER: "user";
    readonly USERS: "users";
    readonly MEMBER: "member";
    readonly MEMBERS: "members";
    readonly RELEVANT: "relevant";
    readonly RELEVANTS: "relevants";
    readonly CHANNEL: "channel";
    readonly CHANNELS: "channels";
    readonly TEXT_CHANNEL: "textChannel";
    readonly TEXT_CHANNELS: "textChannels";
    readonly VOICE_CHANNEL: "voiceChannel";
    readonly VOICE_CHANNELS: "voiceChannels";
    readonly CATEGORY_CHANNEL: "categoryChannel";
    readonly CATEGORY_CHANNELS: "categoryChannels";
    readonly NEWS_CHANNEL: "newsChannel";
    readonly NEWS_CHANNELS: "newsChannels";
    readonly STORE_CHANNEL: "storeChannel";
    readonly STORE_CHANNELS: "storeChannels";
    readonly STAGE_CHANNEL: "stageChannel";
    readonly STAGE_CHANNELS: "stageChannels";
    readonly THREAD_CHANNEL: "threadChannel";
    readonly THREAD_CHANNELS: "threadChannels";
    readonly ROLE: "role";
    readonly ROLES: "roles";
    readonly EMOJI: "emoji";
    readonly EMOJIS: "emojis";
    readonly GUILD: "guild";
    readonly GUILDS: "guilds";
    readonly MESSAGE: "message";
    readonly GUILD_MESSAGE: "guildMessage";
    readonly RELEVANT_MESSAGE: "relevantMessage";
    readonly INVITE: "invite";
    readonly USER_MENTION: "userMention";
    readonly MEMBER_MENTION: "memberMention";
    readonly CHANNEL_MENTION: "channelMention";
    readonly ROLE_MENTION: "roleMention";
    readonly EMOJI_MENTION: "emojiMention";
    readonly COMMAND_ALIAS: "commandAlias";
    readonly COMMAND: "command";
    readonly INHIBITOR: "inhibitor";
    readonly LISTENER: "listener";
    readonly CONTEXT_MENU_COMMAND: "contextMenuCommand";
}>;
export declare const AkairoHandlerEvents: Readonly<{
    readonly LOAD: "load";
    readonly REMOVE: "remove";
}>;
export declare const CommandHandlerEvents: Readonly<{
    readonly COMMAND_BLOCKED: "commandBlocked";
    readonly COMMAND_BREAKOUT: "commandBreakout";
    readonly COMMAND_CANCELLED: "commandCancelled";
    readonly COMMAND_FINISHED: "commandFinished";
    readonly COMMAND_INVALID: "commandInvalid";
    readonly COMMAND_LOCKED: "commandLocked";
    readonly COMMAND_STARTED: "commandStarted";
    readonly COOLDOWN: "cooldown";
    readonly ERROR: "error";
    readonly IN_PROMPT: "inPrompt";
    readonly MESSAGE_BLOCKED: "messageBlocked";
    readonly MESSAGE_INVALID: "messageInvalid";
    readonly MISSING_PERMISSIONS: "missingPermissions";
    readonly SLASH_BLOCKED: "slashBlocked";
    readonly SLASH_ERROR: "slashError";
    readonly SLASH_FINISHED: "slashFinished";
    readonly SLASH_MISSING_PERMISSIONS: "slashMissingPermissions";
    readonly SLASH_NOT_FOUND: "slashNotFound";
    readonly SLASH_STARTED: "slashStarted";
    readonly SLASH_ONLY: "slashOnly";
}>;
export declare const SlashCommandHandlerEvents: Readonly<{
    readonly SLASH_COMMAND_BLOCKED: "slashCommandBlocked";
    readonly SLASH_COMMAND_FINISHED: "slashCommandFinished";
    readonly SLASH_COMMAND_LOCKED: "slashCommandLocked";
    readonly SLASH_COMMAND_STARTED: "slashCommandStarted";
    readonly SLASH_COMMAND_NOT_FOUND: "slashCommandNotFound";
    readonly MESSAGE_BLOCKED: "messageBlocked";
    readonly ERROR: "error";
    readonly SLASH_MESSAGE_BLOCKED: "slashMessageBlocked";
    readonly SLASH_MISSING_PERMISSIONS: "slashMissingPermissions";
}>;
export declare const ContextCommandHandlerEvents: Readonly<{
    readonly ERROR: "error";
    readonly FINISHED: "finished";
    readonly NOT_FOUND: "notFound";
    readonly STARTED: "started";
    readonly BLOCKED: "blocked";
}>;
export declare const BuiltInReasons: Readonly<{
    readonly CLIENT: "client";
    readonly BOT: "bot";
    readonly OWNER: "owner";
    readonly SUPER_USER: "superUser";
    readonly GUILD: "guild";
    readonly DM: "dm";
    readonly AUTHOR_NOT_FOUND: "authorNotFound";
    readonly NOT_NSFW: "notNsfw";
}>;
//# sourceMappingURL=Constants.d.ts.map